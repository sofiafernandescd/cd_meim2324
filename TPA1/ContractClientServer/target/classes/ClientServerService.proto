syntax = "proto3";

option java_multiple_files = true;
option java_package = "clientserverstubs";

package clientserverservice; // package do proto

// serviço com operações sobre números
service ClientServerService {


 
  // 4. A transferência dos ficheiros imagem (upload e download) entre os clientes e os servidores deve ser
  // realizada por streaming de blocos, por exemplo, de 32 Kbyte;

  // 2. Uma aplicação Cliente usa  operações que permitem realizar upload de imagens para um servidor, uma lista de keywords
  // a serem marcadas na imagem inicial e a obtenção posterior da correspondente imagem marcada;
  // Enviar uma imagem para processamento a um servidor específico
  rpc ProcessImageToServer(stream ImageBlock) returns (ImageStatusResponse);

  // 3. Um Cliente pode submeter um conjunto de imagens e só posteriormente pedir ao servidor para obter
  // (download) uma imagem marcada específica. Assim o servidor após receber uma imagem a processar
  // deve retornar um identificador único que identifique a imagem. Através desse identificador o Cliente
  // pode também interrogar o servidor se a imagem correspondente já foi processada, isto é, se já pode
  // fazer o download da imagem marcada;
  // Verificar o status de processamento de uma imagem
  rpc CheckImageStatus(ImageStatusRequest) returns (ImageStatusResponse);

  // Fazer o download de uma imagem marcada, pelo Id
  rpc DownloadMarkedImageById(ImageDownloadRequestId) returns (stream ImageBlock);

  // Fazer o download de uma imagem marcada, pelas keywords
  rpc DownloadMarkedImageByKeywords(stream ImageDownloadRequestKeywords) returns (stream ImageBlock);
}


message ImageStatusRequest {
  string image_id = 1;
}

message ImageStatusResponse {
  string image_id = 1;
  bool status = 2;
}

message ImageBlock {
  string image_id = 1;
  bytes data = 2;
  repeated string keywords = 3;
}

message ImageDownloadRequestId {
  string image_id = 1;
}

message ImageDownloadRequestKeywords {
  repeated string keywords = 1;

}
